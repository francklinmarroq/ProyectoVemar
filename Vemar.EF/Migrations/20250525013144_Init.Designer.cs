// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vemar.EF;

#nullable disable

namespace Vemar.EF.Migrations
{
    [DbContext(typeof(VemarDbContext))]
    [Migration("20250525013144_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vemar.Domain.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("Vemar.Domain.Avance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Avances");
                });

            modelBuilder.Entity("Vemar.Domain.CategoriaProyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadLotes")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasProyectos");
                });

            modelBuilder.Entity("Vemar.Domain.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DniRepresentante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCorporativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailRepresentante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Representante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rtn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RtnRepresentante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Vemar.Domain.CobroRemedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RemedidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RemedidaId");

                    b.ToTable("CobrosRemedidas");
                });

            modelBuilder.Entity("Vemar.Domain.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("Vemar.Domain.Contratista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contratistas");
                });

            modelBuilder.Entity("Vemar.Domain.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratistaId")
                        .HasColumnType("int");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContratistaId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Vemar.Domain.EstadoTramite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadosTramites");
                });

            modelBuilder.Entity("Vemar.Domain.GastoRemedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PendienteDePago")
                        .HasColumnType("bit");

                    b.Property<int?>("RemedidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RemedidaId");

                    b.ToTable("GastosRemedidas");
                });

            modelBuilder.Entity("Vemar.Domain.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemedidaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoMovimientoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RemedidaId");

                    b.HasIndex("TipoMovimientoId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("Vemar.Domain.PagoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("PagosContratos");
                });

            modelBuilder.Entity("Vemar.Domain.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CategoriaProyectoId")
                        .HasColumnType("int");

                    b.Property<string>("ClaveSure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZonificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProyectoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ZonificacionId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("Vemar.Domain.Remedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaveSure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ExpedienteEntregado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objeto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Representante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Remedidas");
                });

            modelBuilder.Entity("Vemar.Domain.TipoMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposMovimientos");
                });

            modelBuilder.Entity("Vemar.Domain.TipoTramite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposTramites");
                });

            modelBuilder.Entity("Vemar.Domain.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposUsuarios");
                });

            modelBuilder.Entity("Vemar.Domain.Tramite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstadoTramiteId")
                        .HasColumnType("int");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoTramiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoTramiteId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("TipoTramiteId");

                    b.ToTable("Tramites");
                });

            modelBuilder.Entity("Vemar.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HashContrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Vemar.Domain.Zonificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Zonificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zonificaciones");
                });

            modelBuilder.Entity("Vemar.Domain.Asignacion", b =>
                {
                    b.HasOne("Vemar.Domain.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Vemar.Domain.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorId");

                    b.HasOne("Vemar.Domain.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId");

                    b.Navigation("Cliente");

                    b.Navigation("Colaborador");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Vemar.Domain.Avance", b =>
                {
                    b.HasOne("Vemar.Domain.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Vemar.Domain.CobroRemedida", b =>
                {
                    b.HasOne("Vemar.Domain.Remedida", "Remedida")
                        .WithMany()
                        .HasForeignKey("RemedidaId");

                    b.Navigation("Remedida");
                });

            modelBuilder.Entity("Vemar.Domain.Contrato", b =>
                {
                    b.HasOne("Vemar.Domain.Contratista", "Contratista")
                        .WithMany()
                        .HasForeignKey("ContratistaId");

                    b.HasOne("Vemar.Domain.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId");

                    b.Navigation("Contratista");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Vemar.Domain.GastoRemedida", b =>
                {
                    b.HasOne("Vemar.Domain.Remedida", "Remedida")
                        .WithMany()
                        .HasForeignKey("RemedidaId");

                    b.Navigation("Remedida");
                });

            modelBuilder.Entity("Vemar.Domain.Movimiento", b =>
                {
                    b.HasOne("Vemar.Domain.Remedida", "Remedida")
                        .WithMany()
                        .HasForeignKey("RemedidaId");

                    b.HasOne("Vemar.Domain.TipoMovimiento", "TipoMovimiento")
                        .WithMany()
                        .HasForeignKey("TipoMovimientoId");

                    b.Navigation("Remedida");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("Vemar.Domain.PagoContrato", b =>
                {
                    b.HasOne("Vemar.Domain.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Vemar.Domain.Proyecto", b =>
                {
                    b.HasOne("Vemar.Domain.CategoriaProyecto", "CategoriaProyecto")
                        .WithMany()
                        .HasForeignKey("CategoriaProyectoId");

                    b.HasOne("Vemar.Domain.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Vemar.Domain.Zonificacion", "Zonificacion")
                        .WithMany()
                        .HasForeignKey("ZonificacionId");

                    b.Navigation("CategoriaProyecto");

                    b.Navigation("Cliente");

                    b.Navigation("Zonificacion");
                });

            modelBuilder.Entity("Vemar.Domain.Remedida", b =>
                {
                    b.HasOne("Vemar.Domain.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Vemar.Domain.Tramite", b =>
                {
                    b.HasOne("Vemar.Domain.EstadoTramite", "EstadoTramite")
                        .WithMany()
                        .HasForeignKey("EstadoTramiteId");

                    b.HasOne("Vemar.Domain.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId");

                    b.HasOne("Vemar.Domain.TipoTramite", "TipoTramite")
                        .WithMany()
                        .HasForeignKey("TipoTramiteId");

                    b.Navigation("EstadoTramite");

                    b.Navigation("Proyecto");

                    b.Navigation("TipoTramite");
                });

            modelBuilder.Entity("Vemar.Domain.Usuario", b =>
                {
                    b.HasOne("Vemar.Domain.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioId");

                    b.Navigation("TipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
